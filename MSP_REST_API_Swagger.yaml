openapi: 3.0.3
info:
  title: MSP REST API
  description: |
    REST API for managing Member Service Providers (MSPs), Partner Organizations, 
    Gateways, Users, Sessions, and Billing. All endpoints require session-based authentication 
    using X-Auth-Token header.
  version: 1.0.0
  contact:
    name: API Support
    email: support@exium.net
  license:
    name: Proprietary
    url: https://exium.net/license

servers:
  - url: https://api.exium.net/api/v1/partner-org
    description: Production server
  - url: https://staging-api.exium.net/api/v1/partner-org
    description: Staging server

security:
  - SessionAuth: []

paths:
  # CRUD MSP
  /msp:
    post:
      summary: Create MSP
      description: Creates a new Member Service Provider (MSP) under the current partner organization
      operationId: createMSP
      tags:
        - MSP Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerInfoReq'
            example:
              email: "contact@example.com"
              name: "Example MSP"
              phone: "+1234567890"
              firstName: "John"
              lastName: "Doe"
              addressCity: "New York"
              addressPostcode: "10001"
              addressCountry: "USA"
              addressStateOrProvince: "NY"
      responses:
        '200':
          description: MSP created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerInfoRsp'
              example:
                partnerName: "example_msp"
                partnerID: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: MSP with the same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "PARTNER_ALREADY_EXISTS"
                message: "Partner with this name already exists"

    get:
      summary: Get All MSPs
      description: Retrieves a list of all MSPs associated with the current partner
      operationId: getAllMSP
      tags:
        - MSP Management
      responses:
        '200':
          description: List of MSPs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreatePartnerInfoReq'
              example:
                - name: "Example MSP 1"
                  email: "contact1@example.com"
                  phone: "+1234567890"
                  firstName: "John"
                  lastName: "Doe"
                  addressCity: "New York"
                  addressPostcode: "10001"
                  addressCountry: "USA"
                  addressStateOrProvince: "NY"
                - name: "Example MSP 2"
                  email: "contact2@example.com"
                  phone: "+1234567891"
                  firstName: "Jane"
                  lastName: "Smith"
                  addressCity: "Los Angeles"
                  addressPostcode: "90210"
                  addressCountry: "USA"
                  addressStateOrProvince: "CA"
        '401':
          $ref: '#/components/responses/Unauthorized'

  /msp/{mspid}:
    get:
      summary: Get MSP
      description: Retrieves details of a specific MSP by ID
      operationId: getMSP
      tags:
        - MSP Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: MSP details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerInfoReq'
              example:
                name: "Example MSP"
                email: "contact@example.com"
                phone: "+1234567890"
                firstName: "John"
                lastName: "Doe"
                addressCity: "New York"
                addressPostcode: "10001"
                addressCountry: "USA"
                addressStateOrProvince: "NY"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update MSP
      description: Updates an existing MSP's information
      operationId: updateMSP
      tags:
        - MSP Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP to update
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartnerInfoReq'
            example:
              name: "Updated MSP Name"
              phone: "+1234567890"
              addressCity: "Updated City"
              addressPostcode: "10002"
              addressCountry: "USA"
              addressStateOrProvince: "NY"
      responses:
        '200':
          description: MSP updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "MSP updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete MSP
      description: Deletes an existing MSP
      operationId: deleteMSP
      tags:
        - MSP Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP to delete
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: MSP deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "MSP deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # CRUD MSP User
  /msp/user/{mspid}:
    post:
      summary: Create MSP User
      description: Creates a new user for a specific MSP
      operationId: createMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerUserReq'
            example:
              firstName: "John"
              lastName: "Doe"
              email: "john.doe@example.com"
              phone: "+1234567890"
              role: "admin"
      responses:
        '200':
          description: MSP user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerUserResp'
              example:
                firstName: "John"
                lastName: "Doe"
                email: "john.doe@example.com"
                phone: "+1234567890"
                role: "admin"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      summary: Get All MSP Users
      description: Retrieves a list of all users for a specific MSP
      operationId: getMSPAllUsers
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: List of MSP users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreatePartnerUserResp'
              example:
                - firstName: "John"
                  lastName: "Doe"
                  email: "john.doe@example.com"
                  phone: "+1234567890"
                  role: "admin"
                - firstName: "Jane"
                  lastName: "Smith"
                  email: "jane.smith@example.com"
                  phone: "+1234567891"
                  role: "user"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /msp/user/{mspid}/{id}:
    get:
      summary: Get MSP User
      description: Retrieves details of a specific user within an MSP
      operationId: getMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: id
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: MSP user details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerUserResp'
              example:
                firstName: "John"
                lastName: "Doe"
                email: "john.doe@example.com"
                phone: "+1234567890"
                role: "admin"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update MSP User
      description: Updates an existing user's information within an MSP
      operationId: updateMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: id
          in: path
          required: true
          description: Unique identifier of the user to update
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerUserReq'
            example:
              firstName: "John"
              lastName: "Doe"
              email: "john.doe.updated@example.com"
              phone: "+1234567890"
              role: "admin"
      responses:
        '200':
          description: MSP user updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "User updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete MSP User
      description: Deletes an existing user from an MSP
      operationId: deleteMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: id
          in: path
          required: true
          description: Unique identifier of the user to delete
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: MSP user deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "User deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # CRUD MSP Organisation
  /partner/organisation:
    post:
      summary: Create Partner Organisation
      description: Creates a new partner organisation
      operationId: createPartnerOrganisation
      tags:
        - Partner Organisation Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgRequest'
            example:
              orgFullName: "Acme Corporation"
              insightID: "insight123"
              accountID: "account456"
              notifyEmails: ["admin@acme.com", "support@acme.com"]
              firstName: "John"
              lastName: "Doe"
              userMail: "john.doe@acme.com"
              phone: "+1234567890"
              userName: "johndoe"
              addressCity: "New York"
              addressPostcode: "10001"
              addressCountry: "USA"
              addressStateOrProvince: "NY"
              instanceSize: "medium"
      responses:
        '200':
          description: Partner organisation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgResponse'
              example:
                orgTag: "acme_corp"
                orgID: "550e8400-e29b-41d4-a716-446655440000"
                trialExpiry: "2024-02-15T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Organisation with this name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "ORG_ALREADY_EXISTS"
                message: "Organisation with this name already exists"

  /partner/organisation/{orgid}:
    get:
      summary: Get Partner Organisation
      description: Retrieves details of a specific partner organisation
      operationId: getPartnerOrganisation
      tags:
        - Partner Organisation Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Organisation details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgList'
              example:
                orgName: "Acme Corporation"
                orgTag: "acme_corp"
                orgID: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update Partner Organisation
      description: Updates an existing partner organisation
      operationId: updatePartnerOrganisation
      tags:
        - Partner Organisation Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgRequest'
            example:
              orgFullName: "Updated Acme Corporation"
              insightID: "insight123"
              accountID: "account456"
              notifyEmails: ["admin@acme.com"]
              firstName: "Jane"
              lastName: "Smith"
              userMail: "jane.smith@acme.com"
              phone: "+1234567891"
              userName: "janesmith"
      responses:
        '200':
          description: Organisation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Organisation updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete Partner Organisation
      description: Deletes an existing partner organisation
      operationId: deletePartnerOrganisation
      tags:
        - Partner Organisation Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Organisation deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Organisation deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /partner/organisations:
    get:
      summary: Get All Partner Organisations
      description: Retrieves a list of all partner organisations
      operationId: getPartnerAllOrganisations
      tags:
        - Partner Organisation Management
      responses:
        '200':
          description: List of organisations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerOrgList'
              example:
                - orgName: "Acme Corporation"
                  orgTag: "acme_corp"
                  orgID: "550e8400-e29b-41d4-a716-446655440000"
                - orgName: "Beta Industries"
                  orgTag: "beta_ind"
                  orgID: "550e8400-e29b-41d4-a716-446655440001"
        '401':
          $ref: '#/components/responses/Unauthorized'

  # CRUD MSP Organisation Session
  /partner/organisation/session/{orgid}:
    post:
      summary: Create Organisation Session
      description: Creates a new session for a partner organisation
      operationId: createPartnerOrganisationSession
      tags:
        - Organisation Session Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSessionRequest'
            example:
              username: "johndoe"
              rbac: "admin"
              theme: "dark"
      responses:
        '200':
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgSessionResponse'
              example:
                redirectURL: "https://dashboard.exium.net/session/abc123"
                sessionID: "550e8400-e29b-41d4-a716-446655440002"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /partner/organisation/session/{sessionid}:
    put:
      summary: Update Organisation Session
      description: Updates an existing organisation session
      operationId: updatePartnerOrganisationSession
      tags:
        - Organisation Session Management
      parameters:
        - name: sessionid
          in: path
          required: true
          description: Unique identifier of the session
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440002"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSessionRequest'
            example:
              username: "johndoe"
              rbac: "admin"
              theme: "light"
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Session updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete Organisation Session
      description: Deletes an existing organisation session
      operationId: deletePartnerOrganisationSession
      tags:
        - Organisation Session Management
      parameters:
        - name: sessionid
          in: path
          required: true
          description: Unique identifier of the session
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440002"
      responses:
        '200':
          description: Session deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Session deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # CRUD MSP Organisation Subscription Update and Suspend/Activate
  /partner/organisation/subscription/{orgid}:
    put:
      summary: Update Organisation Subscription
      description: Updates subscription details for a partner organisation
      operationId: updatePartnerOrganisationSubscription
      tags:
        - Subscription Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSubRequest'
            example:
              state: "active"
              numofusers: 100
              numofgateways: 10
              totaluserscost: 1000.50
              totalgwscost: 500.25
              sase: "pro"
              xdrdays: 30
              iam: true
              gcr: false
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Subscription updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /partner/organisation/suspend/{orgid}:
    put:
      summary: Suspend Organisation
      description: Suspends a partner organisation
      operationId: suspendPartnerOrganisation
      tags:
        - Subscription Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSubRequest'
            example:
              state: "suspended"
              numofusers: 0
              numofgateways: 0
              totaluserscost: 0.0
              totalgwscost: 0.0
              sase: "none"
      responses:
        '200':
          description: Organisation suspended successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Organisation suspended successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /partner/organisation/activate/{orgid}:
    put:
      summary: Activate Organisation
      description: Activates a suspended partner organisation
      operationId: activatePartnerOrganisation
      tags:
        - Subscription Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSubRequest'
            example:
              state: "active"
              numofusers: 100
              numofgateways: 10
              totaluserscost: 1000.50
              totalgwscost: 500.25
              sase: "pro"
      responses:
        '200':
          description: Organisation activated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Organisation activated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # CRUD MSP Usage
  /partner/usage:
    get:
      summary: Get Partner Billing Usage
      description: Retrieves billing usage information for the partner
      operationId: getPartnerBillingUsage
      tags:
        - Billing & Usage
      responses:
        '200':
          description: Billing usage retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgsUsage'
              example:
                orgID: "550e8400-e29b-41d4-a716-446655440000"
                insightID: "insight123"
                accountID: "account456"
                usage:
                  state: "active"
                  numofusers: 100
                  numofgateways: 10
                  totaluserscost: 1000.50
                  totalgwscost: 500.25
                  sase: "pro"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # CRUD MSP Organisation Usage
  /partner/usage/{orgid}:
    get:
      summary: Get Organisation Usage
      description: Retrieves usage information for a specific organisation
      operationId: getPartnerOrgUsage
      tags:
        - Billing & Usage
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Organisation usage retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgsUsage'
              example:
                orgID: "550e8400-e29b-41d4-a716-446655440000"
                insightID: "insight123"
                accountID: "account456"
                usage:
                  state: "active"
                  numofusers: 50
                  numofgateways: 5
                  totaluserscost: 500.25
                  totalgwscost: 250.10
                  sase: "pro"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # CRUD MSP Token
  /partner/token:
    post:
      summary: Generate Partner Session Token
      description: Generates a new session token for the partner
      operationId: generatePartnerSessionToken
      tags:
        - Token Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerToken'
            example:
              token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              expiryDate: "2024-02-15T10:30:00Z"
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerToken'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                expiryDate: "2024-02-15T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # CRUD MSP Organisation Gateway
  /partner/organisation/gateway/{orgid}:
    post:
      summary: Create Organisation Gateway
      description: Creates a new gateway for a partner organisation
      operationId: createPartnerOrgCGW
      tags:
        - Gateway Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgCGWCreateReq'
            example:
              deviceName: "Main Office Gateway"
              Location: "New York Office"
              isIpsecEnabled: true
              lanSubnets:
                - subnet: "192.168.1.0/24"
                  gateway: "192.168.1.1"
                  interface: "eth0"
                  vlanid: 100
              vlanSubnets:
                - subnet: "10.0.1.0/24"
                  gateway: "10.0.1.1"
                  vlanid: 200
      responses:
        '200':
          description: Gateway created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgCGWCreateRsp'
              example:
                cgwTag: "main_office_gw"
                cgwID: "550e8400-e29b-41d4-a716-446655440003"
                authToken: "gateway_auth_token_123"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      summary: Get All Organisation Gateways
      description: Retrieves all gateways for a partner organisation
      operationId: getPartnerOrgAllCGW
      tags:
        - Gateway Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Gateways retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerOrgCGWCreateRsp'
              example:
                - cgwTag: "main_office_gw"
                  cgwID: "550e8400-e29b-41d4-a716-446655440003"
                  authToken: "gateway_auth_token_123"
                - cgwTag: "branch_office_gw"
                  cgwID: "550e8400-e29b-41d4-a716-446655440004"
                  authToken: "gateway_auth_token_456"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /partner/organisation/gateway/{orgid}/{cgwid}:
    get:
      summary: Get Organisation Gateway
      description: Retrieves details of a specific gateway
      operationId: getPartnerOrgCGW
      tags:
        - Gateway Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: cgwid
          in: path
          required: true
          description: Unique identifier of the gateway
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440003"
      responses:
        '200':
          description: Gateway details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgCGWCreateRsp'
              example:
                cgwTag: "main_office_gw"
                cgwID: "550e8400-e29b-41d4-a716-446655440003"
                authToken: "gateway_auth_token_123"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update Organisation Gateway
      description: Updates an existing gateway
      operationId: updatePartnerOrgCGW
      tags:
        - Gateway Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: cgwid
          in: path
          required: true
          description: Unique identifier of the gateway
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440003"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgCGWUpdateReq'
            example:
              isIpsecEnabled: false
              lanSubnets:
                - subnet: "192.168.2.0/24"
                  gateway: "192.168.2.1"
                  interface: "eth1"
                  vlanid: 101
              vlanSubnets:
                - subnet: "10.0.2.0/24"
                  gateway: "10.0.2.1"
                  vlanid: 201
      responses:
        '200':
          description: Gateway updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Gateway updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete Organisation Gateway
      description: Deletes an existing gateway
      operationId: deletePartnerOrgCGW
      tags:
        - Gateway Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: cgwid
          in: path
          required: true
          description: Unique identifier of the gateway
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440003"
      responses:
        '200':
          description: Gateway deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Gateway deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # CRUD MSP Organisation Gateway Session
  /partner/organisation/gateway/session/{orgid}/{cgwid}:
    post:
      summary: Create Gateway Session
      description: Creates a new session for a gateway
      operationId: createPartnerOrgCgwSession
      tags:
        - Gateway Session Management
      parameters:
        - name: orgid
          in: path
          required: true
          description: Unique identifier of the organisation
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: cgwid
          in: path
          required: true
          description: Unique identifier of the gateway
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440003"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSessionRequest'
            example:
              username: "gateway_admin"
              rbac: "admin"
              theme: "default"
      responses:
        '200':
          description: Gateway session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgSessionResponse'
              example:
                redirectURL: "https://gateway.exium.net/session/xyz789"
                sessionID: "550e8400-e29b-41d4-a716-446655440005"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /partner/organisation/gateway/session/{sessionid}/{cgwid}:
    put:
      summary: Update Gateway Session
      description: Updates an existing gateway session
      operationId: updatePartnerOrgCgwSession
      tags:
        - Gateway Session Management
      parameters:
        - name: sessionid
          in: path
          required: true
          description: Unique identifier of the session
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440005"
        - name: cgwid
          in: path
          required: true
          description: Unique identifier of the gateway
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440003"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSessionRequest'
            example:
              username: "gateway_admin"
              rbac: "admin"
              theme: "dark"
      responses:
        '200':
          description: Gateway session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Gateway session updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete Gateway Session
      description: Deletes an existing gateway session
      operationId: deletePartnerOrgCgwSession
      tags:
        - Gateway Session Management
      parameters:
        - name: sessionid
          in: path
          required: true
          description: Unique identifier of the session
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440005"
        - name: cgwid
          in: path
          required: true
          description: Unique identifier of the gateway
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440003"
      responses:
        '200':
          description: Gateway session deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "Gateway session deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    SessionAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: Session-based authentication token

  schemas:
    # MSP Management Schemas (from Go structs)
    CreatePartnerInfoReq:
      type: object
      required:
        - email
        - name
        - phone
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
          description: Contact email for the MSP
          example: "contact@example.com"
        name:
          type: string
          description: Name of the MSP organization
          example: "Example MSP"
        phone:
          type: string
          description: Contact phone number
          example: "+1234567890"
        firstName:
          type: string
          description: First name of the contact person
          example: "John"
        lastName:
          type: string
          description: Last name of the contact person
          example: "Doe"
        addressCity:
          type: string
          description: City address
          example: "New York"
        addressPostcode:
          type: string
          description: Postal code
          example: "10001"
        addressCountry:
          type: string
          description: Country
          example: "USA"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "NY"

    CreatePartnerInfoRsp:
      type: object
      required:
        - partnerName
        - partnerID
      properties:
        partnerName:
          type: string
          description: Generated partner name (original name with "msp_" prefix)
          example: "example_msp"
        partnerID:
          type: string
          format: uuid
          description: Unique identifier for the created MSP
          example: "550e8400-e29b-41d4-a716-446655440000"

    UpdatePartnerInfoReq:
      type: object
      required:
        - name
        - phone
      properties:
        name:
          type: string
          description: Updated name of the MSP
          example: "Updated MSP Name"
        phone:
          type: string
          description: Updated phone number
          example: "+1234567890"
        addressCity:
          type: string
          description: Updated city
          example: "Updated City"
        addressPostcode:
          type: string
          description: Updated postal code
          example: "10002"
        addressCountry:
          type: string
          description: Updated country
          example: "USA"
        addressStateOrProvince:
          type: string
          description: Updated state or province
          example: "NY"

    # MSP User Management Schemas (from Go structs)
    CreatePartnerUserReq:
      type: object
      required:
        - firstName
        - lastName
        - email
        - phone
        - role
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user (generated on creation)
          example: "550e8400-e29b-41d4-a716-446655440000"
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"
        email:
          type: string
          format: email
          description: User's email address
          example: "john.doe@example.com"
        phone:
          type: string
          description: User's phone number
          example: "+1234567890"
        role:
          type: string
          description: User's role
          enum: ["admin", "user", "idp"]
          example: "admin"

    CreatePartnerUserResp:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"
        email:
          type: string
          format: email
          description: User's email address
          example: "john.doe@example.com"
        phone:
          type: string
          description: User's phone number
          example: "+1234567890"
        role:
          type: string
          description: User's role
          example: "admin"

    # Partner Organisation Schemas (from Go structs)
    PartnerOrgRequest:
      type: object
      required:
        - orgFullName
        - insightID
        - accountID
      properties:
        orgFullName:
          type: string
          description: Full name of the organisation
          example: "Acme Corporation"
        insightID:
          type: string
          description: Insight ID for the organisation
          example: "insight123"
        accountID:
          type: string
          description: Account ID for the organisation
          example: "account456"
        notifyEmails:
          type: array
          items:
            type: string
          description: List of notification emails
          example: ["admin@acme.com", "support@acme.com"]
        firstName:
          type: string
          description: First name of the primary contact
          example: "John"
        lastName:
          type: string
          description: Last name of the primary contact
          example: "Doe"
        userMail:
          type: string
          format: email
          description: Primary contact email
          example: "john.doe@acme.com"
        phone:
          type: string
          description: Contact phone number
          example: "+1234567890"
        userName:
          type: string
          description: Username for the primary contact
          example: "johndoe"
        addressCity:
          type: string
          description: City address
          example: "New York"
        addressPostcode:
          type: string
          description: Postal code
          example: "10001"
        addressCountry:
          type: string
          description: Country
          example: "USA"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "NY"
        instanceSize:
          type: string
          description: Instance size
          example: "medium"

    PartnerOrgResponse:
      type: object
      properties:
        orgTag:
          type: string
          description: Organisation tag
          example: "acme_corp"
        orgID:
          type: string
          format: uuid
          description: Unique organisation identifier
          example: "550e8400-e29b-41d4-a716-446655440000"
        trialExpiry:
          type: string
          format: date-time
          description: Trial expiration date
          example: "2024-02-15T10:30:00Z"

    PartnerOrgList:
      type: object
      properties:
        orgName:
          type: string
          description: Organisation name
          example: "Acme Corporation"
        orgTag:
          type: string
          description: Organisation tag
          example: "acme_corp"
        orgID:
          type: string
          format: uuid
          description: Unique organisation identifier
          example: "550e8400-e29b-41d4-a716-446655440000"

    # Session Management Schemas (from Go structs)
    PartnerOrgSessionRequest:
      type: object
      properties:
        username:
          type: string
          description: Username for the session
          example: "johndoe"
        rbac:
          type: string
          description: Role-based access control
          example: "admin"
        theme:
          type: string
          description: UI theme preference
          example: "dark"

    PartnerOrgSessionResponse:
      type: object
      properties:
        redirectURL:
          type: string
          description: Redirect URL after session creation
          example: "https://dashboard.exium.net/session/abc123"
        sessionID:
          type: string
          format: uuid
          description: Unique session identifier
          example: "550e8400-e29b-41d4-a716-446655440002"

    # Subscription Management Schemas (from Go structs)
    PartnerOrgSubRequest:
      type: object
      properties:
        state:
          type: string
          description: Subscription state
          example: "active"
        numofusers:
          type: integer
          format: int32
          description: Number of users
          example: 100
        numofgateways:
          type: integer
          format: int32
          description: Number of gateways
          example: 10
        totaluserscost:
          type: number
          format: float
          description: Total cost for users
          example: 1000.50
        totalgwscost:
          type: number
          format: float
          description: Total cost for gateways
          example: 500.25
        sase:
          type: string
          description: SASE subscription level
          example: "pro"
        xdrdays:
          type: integer
          description: XDR days
          example: 30
        iam:
          type: boolean
          description: IAM enabled
          example: true
        gcr:
          type: boolean
          description: GCR enabled
          example: false

    # Usage Schemas (from Go structs)
    PartnerOrgsUsage:
      type: object
      properties:
        orgID:
          type: string
          format: uuid
          description: Organisation ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        insightID:
          type: string
          description: Insight ID
          example: "insight123"
        accountID:
          type: string
          description: Account ID
          example: "account456"
        usage:
          $ref: '#/components/schemas/PartnerOrgSubRequest'

    # Token Management Schemas (from Go structs)
    PartnerToken:
      type: object
      properties:
        token:
          type: string
          description: Generated token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiryDate:
          type: string
          format: date-time
          description: Token expiration date
          example: "2024-02-15T10:30:00Z"

    # Gateway Management Schemas (from Go structs)
    PartnerOrgCGWCreateReq:
      type: object
      required:
        - deviceName
        - Location
      properties:
        deviceName:
          type: string
          description: Name of the gateway device
          example: "Main Office Gateway"
        Location:
          type: string
          description: Location of the gateway
          example: "New York Office"
        isIpsecEnabled:
          type: boolean
          description: Whether IPSec is enabled
          example: true
        lanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/LanSubnet'
          description: LAN subnet configurations
        vlanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/VlanSubnet'
          description: VLAN subnet configurations

    LanSubnet:
      type: object
      properties:
        subnet:
          type: string
          description: Subnet address
          example: "192.168.1.0/24"
        gateway:
          type: string
          description: Gateway address
          example: "192.168.1.1"
        interface:
          type: string
          description: Interface name
          example: "eth0"
        vlanid:
          type: integer
          description: VLAN ID
          example: 100

    VlanSubnet:
      type: object
      properties:
        subnet:
          type: string
          description: Subnet address
          example: "10.0.1.0/24"
        gateway:
          type: string
          description: Gateway address
          example: "10.0.1.1"
        vlanid:
          type: integer
          description: VLAN ID
          example: 200

    PartnerOrgCGWCreateRsp:
      type: object
      properties:
        cgwTag:
          type: string
          description: Gateway tag
          example: "main_office_gw"
        cgwID:
          type: string
          format: uuid
          description: Unique gateway identifier
          example: "550e8400-e29b-41d4-a716-446655440003"
        authToken:
          type: string
          description: Gateway authentication token
          example: "gateway_auth_token_123"

    PartnerOrgCGWUpdateReq:
      type: object
      properties:
        isIpsecEnabled:
          type: boolean
          description: Whether IPSec is enabled
          example: false
        lanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/LanSubnet'
          description: LAN subnet configurations
        vlanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/VlanSubnet'
          description: VLAN subnet configurations

    # Common Response Schemas
    SuccessMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Success message
          example: "Operation completed successfully"

    ErrorResponse:
      type: object
      required:
        - errorCode
        - message
      properties:
        errorCode:
          type: string
          description: Error code
          example: "INVALID_REQUEST"
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"

  responses:
    BadRequest:
      description: Bad Request - Invalid JSON or missing required fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "BAD_JSON_REQUEST"
            message: "Invalid JSON format or missing required fields"

    Unauthorized:
      description: Unauthorized - Invalid or expired session
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "SESSION_ID_NOT_FOUND"
            message: "Session ID not found in request"

    NotFound:
      description: Not Found - Resource not found or access denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "RESOURCE_NOT_FOUND"
            message: "Resource not found or access denied"

tags:
  - name: MSP Management
    description: Operations for managing Member Service Providers
  - name: MSP User Management
    description: Operations for managing users within MSPs
  - name: Partner Organisation Management
    description: Operations for managing partner organisations
  - name: Organisation Session Management
    description: Operations for managing organisation sessions
  - name: Subscription Management
    description: Operations for managing subscriptions and organisation status
  - name: Billing & Usage
    description: Operations for billing and usage tracking
  - name: Token Management
    description: Operations for generating and managing tokens
  - name: Gateway Management
    description: Operations for managing organisation gateways
  - name: Gateway Session Management
    description: Operations for managing gateway sessions