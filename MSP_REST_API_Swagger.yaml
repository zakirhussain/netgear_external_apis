openapi: 3.0.3
info:
  title: MSP Management API
  description: |
    API for managing Managed Service Providers (MSPs), their users, organizations, gateways, and subscriptions.
    
    All endpoints require authentication via the X-Auth-Token header.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging-api.example.com/v1
    description: Staging server

tags:
  - name: 1. MSP
    description: MSP management operations
  - name: 2. MSP Users
    description: MSP user management operations
  - name: 3. MSP Organisations
    description: MSP organization management operations
  - name: 4. MSP Organisation Sessions
    description: MSP organization session management
  - name: 5. MSP Organisation Subscriptions
    description: MSP organization subscription management
  - name: 6. MSP Usage & Billing
    description: MSP usage and billing information
  - name: 7. MSP Tokens
    description: MSP token management
  - name: 8. MSP Organisation Gateways
    description: MSP organization gateway management
  - name: 9. MSP Gateway Sessions
    description: MSP gateway session management

x-tagGroups:
  - name: MSP Management
    tags:
      - 1. MSP
      - 2. MSP Users
      - 7. MSP Tokens
  - name: Organization Management
    tags:
      - 3. MSP Organisations
      - 4. MSP Organisation Sessions
      - 5. MSP Organisation Subscriptions
      - 6. MSP Usage & Billing
  - name: Gateway Management
    tags:
      - 8. MSP Organisation Gateways
      - 9. MSP Gateway Sessions

paths:
  # ==================== MSP Endpoints ====================
  /msp:
    post:
      tags:
        - 1. MSP
      summary: Create new MSP
      description: Creates a new Managed Service Provider
      operationId: createMSP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerInfoReq'
      responses:
        '200':
          description: MSP created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerInfoRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    get:
      tags:
        - 1. MSP
      summary: Get all MSPs
      description: Retrieves all MSPs under the current partner
      operationId: getAllMSP
      responses:
        '200':
          description: List of MSPs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPartnerInfoRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/{mspid}:
    get:
      tags:
        - 1. MSP
      summary: Get MSP by ID
      description: Retrieves a specific MSP by its ID
      operationId: getMSP
      parameters:
        - $ref: '#/components/parameters/MspId'
      responses:
        '200':
          description: MSP retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartnerInfoRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags:
        - 1. MSP
      summary: Update MSP
      description: Updates an existing MSP's information
      operationId: updateMSP
      parameters:
        - $ref: '#/components/parameters/MspId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartnerInfoReq'
      responses:
        '200':
          description: MSP updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 1. MSP
      summary: Delete MSP
      description: Deletes an existing MSP
      operationId: deleteMSP
      parameters:
        - $ref: '#/components/parameters/MspId'
      responses:
        '200':
          description: MSP deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP User Endpoints ====================
  /msp/user/{mspid}:
    post:
      tags:
        - 2. MSP Users
      summary: Create MSP user
      description: Creates a new user for a specific MSP
      operationId: createMSPUser
      parameters:
        - $ref: '#/components/parameters/MspId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerUserReq'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerUserResp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    get:
      tags:
        - 2. MSP Users
      summary: Get all MSP users
      description: Retrieves all users for a specific MSP
      operationId: getMSPAllUsers
      parameters:
        - $ref: '#/components/parameters/MspId'
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPartnerUserResp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/user/{mspid}/{id}:
    get:
      tags:
        - 2. MSP Users
      summary: Get MSP user
      description: Retrieves a specific user from an MSP
      operationId: getMSPUser
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartnerUserResp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags:
        - 2. MSP Users
      summary: Update MSP user
      description: Updates an existing MSP user
      operationId: updateMSPUser
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerUserReq'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 2. MSP Users
      summary: Delete MSP user
      description: Deletes an MSP user
      operationId: deleteMSPUser
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Organisation Endpoints ====================
  /msp/organisation/{mspid}:
    post:
      tags:
        - 3. MSP Organisations
      summary: Create organization
      description: Creates a new organization under an MSP
      operationId: createMSPOrganisation
      parameters:
        - $ref: '#/components/parameters/MspId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgRequest'
      responses:
        '200':
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisation/{mspid}/{orgid}:
    get:
      tags:
        - 3. MSP Organisations
      summary: Get organization
      description: Retrieves a specific organization under an MSP
      operationId: getMSPOrganisation
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      responses:
        '200':
          description: Organization retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags:
        - 3. MSP Organisations
      summary: Update organization
      description: Updates an existing organization under an MSP
      operationId: updateMSPOrganisation
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgRequest'
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 3. MSP Organisations
      summary: Delete organization
      description: Deletes an organization under an MSP
      operationId: deleteMSPOrganisation
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      responses:
        '200':
          description: Organization deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisations/{mspid}:
    get:
      tags:
        - 3. MSP Organisations
      summary: Get all organizations
      description: Retrieves all organizations under an MSP
      operationId: getMSPAllOrganisations
      parameters:
        - $ref: '#/components/parameters/MspId'
      responses:
        '200':
          description: List of organizations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerOrgList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Organisation Session Endpoints ====================
  /msp/organisation/session/{mspid}/{orgid}:
    post:
      tags:
        - 4. MSP Organisation Sessions
      summary: Create organization session
      description: Creates a new session for accessing an MSP organization
      operationId: createMSPOrganisationSession
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSessionRequest'
      responses:
        '200':
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisation/session/{mspid}/{sessionid}:
    put:
      tags:
        - 4. MSP Organisation Sessions
      summary: Update organization session
      description: Updates an existing MSP organization session
      operationId: updateMSPOrganisationSession
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewaySessionRequest'
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 4. MSP Organisation Sessions
      summary: Delete organization session
      description: Deletes an MSP organization session
      operationId: deleteMSPOrganisationSession
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: Session deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Organisation Subscription Endpoints ====================
  /msp/organisation/subscription/{mspid}/{orgid}:
    put:
      tags:
        - 5. MSP Organisation Subscriptions
      summary: Update organization subscription
      description: Updates the subscription details for an MSP organization
      operationId: updateMSPOrganisationSubscription
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSubUpdateRequest'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisation/suspend/{mspid}/{orgid}:
    put:
      tags:
        - 5. MSP Organisation Subscriptions
      summary: Suspend organization
      description: Suspends an MSP organization's subscription
      operationId: suspendMSPOrganisation
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      responses:
        '200':
          description: Organization suspended successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisation/activate/{mspid}/{orgid}:
    put:
      tags:
        - 5. MSP Organisation Subscriptions
      summary: Activate organization
      description: Activates an MSP organization's subscription
      operationId: activateMSPOrganisation
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      responses:
        '200':
          description: Organization activated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Usage Endpoints ====================
  /msp/usage/{mspid}:
    get:
      tags:
        - 6. MSP Usage & Billing
      summary: Get MSP usage
      description: Retrieves billing usage information for all organizations under an MSP
      operationId: getMSPBillingUsage
      parameters:
        - $ref: '#/components/parameters/MspId'
      responses:
        '200':
          description: Usage information retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerOrgsUsage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/usage/{mspid}/{orgid}:
    get:
      tags:
        - 6. MSP Usage & Billing
      summary: Get organization usage
      description: Retrieves usage information for a specific MSP organization
      operationId: getMSPOrgUsage
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      responses:
        '200':
          description: Organization usage retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgsUsage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Token Endpoints ====================
  /msp/token/{mspid}:
    post:
      tags:
        - 7. MSP Tokens
      summary: Generate MSP token
      description: Generates a new session token for an MSP
      operationId: generateMSPSessionToken
      parameters:
        - $ref: '#/components/parameters/MspId'
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerToken'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Organisation Gateway Endpoints ====================
  /msp/organisation/gateway/{mspid}/{orgid}:
    post:
      tags:
        - 8. MSP Organisation Gateways
      summary: Create gateway
      description: Creates a new gateway for an MSP organization
      operationId: createMSPOrgGateway
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgCGWCreateReq'
      responses:
        '200':
          description: Gateway created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgCGWCreateRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    get:
      tags:
        - 8. MSP Organisation Gateways
      summary: Get all gateways
      description: Retrieves all gateways for a specific MSP organization
      operationId: getMSPOrgAllGateways
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
      responses:
        '200':
          description: List of gateways retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerOrgCGWInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisation/gateway/{mspid}/{orgid}/{cgwid}:
    get:
      tags:
        - 8. MSP Organisation Gateways
      summary: Get gateway
      description: Retrieves a specific gateway by its ID for an MSP organization
      operationId: getMSPOrgGateway
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/GatewayId'
      responses:
        '200':
          description: Gateway retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgCGWInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags:
        - 8. MSP Organisation Gateways
      summary: Update gateway
      description: Updates an existing gateway for an MSP organization
      operationId: updateMSPOrgGateway
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/GatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgCGWUpdateReq'
      responses:
        '200':
          description: Gateway updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 8. MSP Organisation Gateways
      summary: Delete gateway
      description: Deletes a gateway from an MSP organization
      operationId: deleteMSPOrgGateway
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/GatewayId'
      responses:
        '200':
          description: Gateway deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== MSP Gateway Session Endpoints ====================
  /msp/organisation/gateway/session/{mspid}/{orgid}/{cgwid}:
    post:
      tags:
        - 9. MSP Gateway Sessions
      summary: Create gateway session
      description: Creates a new session for accessing an MSP organization's gateway
      operationId: createMSPOrgGatewaySession
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/GatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerOrgSessionRequest'
      responses:
        '200':
          description: Gateway session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerOrgSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /msp/organisation/gateway/session/{mspid}/{sessionid}/{cgwid}:
    put:
      tags:
        - 9. MSP Gateway Sessions
      summary: Update gateway session
      description: Updates an existing MSP gateway session
      operationId: updateMSPOrgGatewaySession
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/GatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewaySessionRequest'
      responses:
        '200':
          description: Gateway session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 9. MSP Gateway Sessions
      summary: Delete gateway session
      description: Deletes an MSP gateway session
      operationId: deleteMSPOrgGatewaySession
      parameters:
        - $ref: '#/components/parameters/MspId'
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/GatewayId'
      responses:
        '200':
          description: Gateway session deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeRsp'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    SessionToken:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: Session authentication token

  parameters:
    MspId:
      name: mspid
      in: path
      required: true
      description: MSP ID
      schema:
        type: string
        format: uuid
      example: "123e4567-e89b-12d3-a456-426614174000"

    OrgId:
      name: orgid
      in: path
      required: true
      description: Organization ID
      schema:
        type: string
        format: uuid
      example: "123e4567-e89b-12d3-a456-426614174001"

    UserId:
      name: id
      in: path
      required: true
      description: User ID
      schema:
        type: string
        format: uuid
      example: "123e4567-e89b-12d3-a456-426614174002"

    GatewayId:
      name: cgwid
      in: path
      required: true
      description: Gateway ID
      schema:
        type: string
        format: uuid
      example: "123e4567-e89b-12d3-a456-426614174003"

    SessionId:
      name: sessionid
      in: path
      required: true
      description: Session ID
      schema:
        type: string
        format: uuid
      example: "123e4567-e89b-12d3-a456-426614174004"

  schemas:
    # ==================== MSP Schemas ====================
    CreatePartnerInfoReq:
      type: object
      required:
        - email
        - name
        - phone
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
          description: MSP contact email address
          example: "contact@example-msp.com"
        name:
          type: string
          description: MSP organization name
          example: "Example MSP"
        phone:
          type: string
          description: MSP phone number
          example: "+1-555-0123"
        firstName:
          type: string
          description: Contact first name
          example: "John"
        lastName:
          type: string
          description: Contact last name
          example: "Doe"
        addressCity:
          type: string
          description: City
          example: "New York"
        addressPostcode:
          type: string
          description: Postal/ZIP code
          example: "10001"
        addressCountry:
          type: string
          description: Country
          example: "United States"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "NY"

    CreatePartnerInfoRsp:
      type: object
      properties:
        mspName:
          type: string
          description: Created partner/MSP name
          example: "example-msp"
        mspID:
          type: string
          format: uuid
          description: Created partner/MSP ID
          example: "123e4567-e89b-12d3-a456-426614174000"
    
    GetPartnerInfoRsp:
      type: object
      properties:
        mspID:
          type: string
          format: uuid
          description: Partner/MSP ID
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          description: Partner/MSP email address
          example: "contact@example-msp.com"
        name:
          type: string
          description: Partner/MSP organization name
          example: "Example MSP"
        phone:
          type: string
          description: Partner/MSP phone number
          example: "+1-555-0123"
        firstName:
          type: string
          description: Contact first name
          example: "John"
        lastName:
          type: string
          description: Contact last name
          example: "Doe"
        addressCity:
          type: string
          description: City
          example: "San Francisco"
        addressPostcode:
          type: string
          description: Postal/ZIP code
          example: "94102"
        addressCountry:
          type: string
          description: Country
          example: "United States"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "CA"

    UpdatePartnerInfoReq:
      type: object
      properties:
        name:
          type: string
          description: MSP organization name
          example: "Updated MSP Name"
        phone:
          type: string
          description: MSP phone number
          example: "+1-555-0124"
        addressCity:
          type: string
          description: City
          example: "Los Angeles"
        addressPostcode:
          type: string
          description: Postal/ZIP code
          example: "90001"
        addressCountry:
          type: string
          description: Country
          example: "United States"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "CA"

    # ==================== MSP User Schemas ====================
    CreatePartnerUserReq:
      type: object
      required:
        - firstName
        - lastName
        - email
        - role
      properties:
        firstName:
          type: string
          description: User first name
          example: "Jane"
        lastName:
          type: string
          description: User last name
          example: "Smith"
        email:
          type: string
          format: email
          description: User email address
          example: "jane.smith@example.com"
        phone:
          type: string
          description: User phone number
          example: "+1-555-0125"
        role:
          type: string
          description: User role
          example: "admin"
          enum:
            - admin
            - user
            - viewer

    CreatePartnerUserResp:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: User ID
          example: "123e4567-e89b-12d3-a456-426614174000"
        firstName:
          type: string
          description: User first name
          example: "Jane"
        lastName:
          type: string
          description: User last name
          example: "Smith"
        email:
          type: string
          format: email
          description: User email address
          example: "jane.smith@example.com"
        phone:
          type: string
          description: User phone number
          example: "+1-555-0125"
        role:
          type: string
          description: User role
          example: "admin"

    GetPartnerUserResp:
      type: object
      properties:
        firstName:
          type: string
          description: User first name
          example: "Jane"
        lastName:
          type: string
          description: User last name
          example: "Smith"
        email:
          type: string
          format: email
          description: User email address
          example: "jane.smith@example.com"
        phone:
          type: string
          description: User phone number
          example: "+1-555-0125"
        role:
          type: string
          description: User role
          example: "admin"

    # ==================== Token Schemas ====================
    PartnerToken:
      type: object
      properties:
        token:
          type: string
          description: Generated session token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiryDate:
          type: string
          format: date-time
          description: Token expiry date
          example: "2025-10-17T12:00:00Z"

    # ==================== Partner Organisation Schemas ====================
    PartnerOrgRequest:
      type: object
      required:
        - orgFullName
        - insightID
        - accountID
      properties:
        orgFullName:
          type: string
          description: Full name of the organization
          example: "Example Corporation"
        insightID:
          type: string
          description: Insight ID for the organization
          example: "INS-12345"
        accountID:
          type: string
          description: Account ID for the organization
          example: "ACC-67890"
        notifyEmails:
          type: array
          items:
            type: string
            format: email
          description: List of notification email addresses
          example: ["admin@example.com", "billing@example.com"]
        firstName:
          type: string
          description: Primary contact first name
          example: "Alice"
        lastName:
          type: string
          description: Primary contact last name
          example: "Johnson"
        userMail:
          type: string
          format: email
          description: Primary contact email
          example: "alice.johnson@example.com"
        phone:
          type: string
          description: Contact phone number
          example: "+1-555-0126"
        userName:
          type: string
          description: Username for the primary contact
          example: "ajohnson"
        addressCity:
          type: string
          description: City
          example: "San Francisco"
        addressPostcode:
          type: string
          description: Postal/ZIP code
          example: "94102"
        addressCountry:
          type: string
          description: Country
          example: "United States"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "CA"
        instanceSize:
          type: string
          description: Size of the instance
          example: "medium"
          enum:
            - small
            - medium
            - large

    PartnerOrgResponse:
      type: object
      properties:
        orgTag:
          type: string
          description: Organization tag/name
          example: "example-corp"
        orgID:
          type: string
          format: uuid
          description: Organization ID
          example: "123e4567-e89b-12d3-a456-426614174001"
        trialExpiry:
          type: string
          format: date-time
          description: Trial expiry date
          example: "2025-12-31T23:59:59Z"

    PartnerOrgList:
      type: object
      properties:
        orgName:
          type: string
          description: Organization name
          example: "example-corp"
        orgTag:
          type: string
          description: Organization tag
          example: "example-corp"
        orgID:
          type: string
          format: uuid
          description: Organization ID
          example: "123e4567-e89b-12d3-a456-426614174001"

    # ==================== Subscription Schemas ====================
    PartnerOrgSubUpdateRequest:
      type: object
      required:
        - sase
      properties:
        state:
          type: string
          description: Subscription state
          example: "active"
          enum:
            - active
            - suspended
            - trial
        sase:
          type: string
          description: SASE tier
          example: "pro"
          enum:
            - essentials
            - pro

    # ==================== Usage Schemas ====================
    PartnerOrgUsageData:
      type: object
      required:
        - numofusers
        - numofgateways
        - sase
      properties:
        state:
          type: string
          description: Subscription state
          example: "active"
          enum:
            - active
            - suspended
            - trial
        numofusers:
          type: integer
          format: int32
          minimum: 0
          description: Number of users
          example: 100
        numofgateways:
          type: integer
          format: int32
          minimum: 0
          description: Number of gateways
          example: 5
        totaluserscost:
          type: number
          format: double
          description: Total cost for users
          example: 1000.00
        totalgwscost:
          type: number
          format: double
          description: Total cost for gateways
          example: 500.00
        sase:
          type: string
          description: SASE tier
          example: "pro"
          enum:
            - essentials
            - pro

    PartnerOrgsUsage:
      type: object
      properties:
        orgID:
          type: string
          format: uuid
          description: Organization ID
          example: "123e4567-e89b-12d3-a456-426614174001"
        insightID:
          type: string
          description: Insight ID
          example: "INS-12345"
        accountID:
          type: string
          description: Account ID
          example: "ACC-67890"
        usage:
          $ref: '#/components/schemas/PartnerOrgUsageData'

    # ==================== Session Schemas ====================
    PartnerOrgSessionRequest:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          description: Username for the session
          example: "ajohnson"
        rbac:
          type: string
          description: Role-based access control setting
          example: "admin"
        theme:
          type: string
          description: UI theme preference
          example: "dark"
          enum:
            - light
            - dark

    GatewaySessionRequest:
      type: object
      properties:
        theme:
          type: string
          description: UI theme preference
          example: "dark"
          enum:
            - light
            - dark

    PartnerOrgSessionResponse:
      type: object
      properties:
        redirectURL:
          type: string
          format: uri
          description: URL to redirect after session creation
          example: "https://portal.example.com/dashboard"
        sessionID:
          type: string
          format: uuid
          description: Created session ID
          example: "123e4567-e89b-12d3-a456-426614174002"

    # ==================== Gateway Schemas ====================
    PartnerOrgCGWCreateReq:
      type: object
      required:
        - deviceName
        - isIpsecEnabled
      properties:
        deviceName:
          type: string
          description: Gateway device name
          example: "Gateway-SF-01"
        Location:
          type: string
          description: Gateway location
          example: "San Francisco Office"
        isIpsecEnabled:
          type: boolean
          description: Whether IPSec is enabled
          example: true
        isSDWanDisabled:
          type: boolean
          description: Whether SD-WAN is disabled
          example: false
        lanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/LanSubnet'
          description: LAN subnet configurations
        vlanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/VlanSubnet'
          description: VLAN subnet configurations

    LanSubnet:
      type: object
      required:
        - subnet
        - gateway
        - interface
      properties:
        subnet:
          type: string
          description: Subnet CIDR
          example: "192.168.1.0/24"
        gateway:
          type: string
          format: ipv4
          description: Gateway IP address
          example: "192.168.1.1"
        interface:
          type: string
          description: Network interface
          example: "eth0"
        vlanid:
          type: integer
          description: VLAN ID
          example: 100

    VlanSubnet:
      type: object
      required:
        - subnet
        - gateway
        - vlanid
      properties:
        subnet:
          type: string
          description: Subnet CIDR
          example: "192.168.10.0/24"
        gateway:
          type: string
          format: ipv4
          description: Gateway IP address
          example: "192.168.10.1"
        vlanid:
          type: integer
          description: VLAN ID
          example: 10

    PartnerOrgCGWCreateRsp:
      type: object
      properties:
        cgwTag:
          type: string
          description: Gateway tag/name
          example: "gateway-sf-01"
        cgwID:
          type: string
          format: uuid
          description: Gateway ID
          example: "123e4567-e89b-12d3-a456-426614174003"
        authToken:
          type: string
          description: Authentication token for the gateway
          example: "gw-auth-token-123456789"

    PartnerOrgCGWUpdateReq:
      type: object
      properties:
        isIpsecEnabled:
          type: boolean
          description: Whether IPSec is enabled
          example: false
        isSDWanDisabled:
          type: boolean
          description: Whether SD-WAN is disabled
          example: false
        lanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/LanSubnet'
          description: LAN subnet configurations
        vlanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/VlanSubnet'
          description: VLAN subnet configurations

    PartnerOrgCGWInfo:
      type: object
      properties:
        deviceName:
          type: string
          description: Gateway device name
          example: "Gateway-SF-01"
        location:
          type: string
          description: Gateway location
          example: "San Francisco Office"
        isIpsecEnabled:
          type: boolean
          description: Whether IPSec is enabled
          example: true
        status:
          type: string
          description: Gateway status
          example: "active"
          enum:
            - active
            - inactive
            - pending
        lanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/LanSubnet'
        vlanSubnets:
          type: array
          items:
            $ref: '#/components/schemas/VlanSubnet'

    # ==================== Common Schemas ====================
    StatusCodeRsp:
      type: object
      properties:
        statuscode:
          type: integer
          description: HTTP status code
          example: 200

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request"
        errorCode:
          type: integer
          description: Application-specific error code
          example: 1001
        message:
          type: string
          description: Detailed error message
          example: "The provided request data is invalid"

  responses:
    BadRequest:
      description: Bad request - Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Bad Request"
            errorCode: 400
            message: "Invalid JSON in request body"
    
    Unauthorized:
      description: Unauthorized - Invalid or missing authentication token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Unauthorized"
            errorCode: 401
            message: "Invalid or expired session token"
    
    NotFound:
      description: Not found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Not Found"
            errorCode: 404
            message: "The requested resource was not found"
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Internal Server Error"
            errorCode: 500
            message: "An unexpected error occurred"

security:
  - SessionToken: []

