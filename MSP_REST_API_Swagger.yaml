openapi: 3.0.3
info:
  title: MSP (Member Service Provider) REST API
  description: |
    This API provides comprehensive management for Member Service Providers (MSPs) and their associated users.
    All endpoints require session-based authentication and support CORS for cross-origin requests.
  version: 1.0.0
  contact:
    name: API Support
    email: support@exium.net
  license:
    name: Proprietary
    url: https://exium.net/license

servers:
  - url: https://api.exium.net/api/v1/partner-org
    description: Production server
  - url: https://staging-api.exium.net/api/v1/partner-org
    description: Staging server

security:
  - SessionAuth: []

paths:
  /msp:
    post:
      summary: Create MSP
      description: Creates a new Member Service Provider (MSP) under the current partner organization
      operationId: createMSP
      tags:
        - MSP Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerInfoReq'
            example:
              email: "contact@example.com"
              name: "Example MSP"
              phone: "+1234567890"
              firstName: "John"
              lastName: "Doe"
              addressCity: "New York"
              addressPostcode: "10001"
              addressCountry: "USA"
              addressStateOrProvince: "NY"
      responses:
        '200':
          description: MSP created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerInfoRsp'
              example:
                partnerName: "example_msp"
                partnerID: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: MSP with the same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "PARTNER_ALREADY_EXISTS"
                message: "Partner with this name already exists"

    get:
      summary: Get All MSPs
      description: Retrieves a list of all MSPs associated with the current partner
      operationId: getAllMSP
      tags:
        - MSP Management
      responses:
        '200':
          description: List of MSPs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreatePartnerInfoReq'
              example:
                - name: "Example MSP 1"
                  email: "contact1@example.com"
                  phone: "+1234567890"
                  firstName: "John"
                  lastName: "Doe"
                  addressCity: "New York"
                  addressPostcode: "10001"
                  addressCountry: "USA"
                  addressStateOrProvince: "NY"
                - name: "Example MSP 2"
                  email: "contact2@example.com"
                  phone: "+1234567891"
                  firstName: "Jane"
                  lastName: "Smith"
                  addressCity: "Los Angeles"
                  addressPostcode: "90210"
                  addressCountry: "USA"
                  addressStateOrProvince: "CA"
        '401':
          $ref: '#/components/responses/Unauthorized'

  /msp/{mspid}:
    get:
      summary: Get MSP
      description: Retrieves details of a specific MSP by ID
      operationId: getMSP
      tags:
        - MSP Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: MSP details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerInfoReq'
              example:
                name: "Example MSP"
                email: "contact@example.com"
                phone: "+1234567890"
                firstName: "John"
                lastName: "Doe"
                addressCity: "New York"
                addressPostcode: "10001"
                addressCountry: "USA"
                addressStateOrProvince: "NY"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update MSP
      description: Updates an existing MSP's information
      operationId: updateMSP
      tags:
        - MSP Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP to update
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartnerInfoReq'
            example:
              name: "Updated MSP Name"
              phone: "+1234567890"
              addressCity: "Updated City"
              addressPostcode: "10002"
              addressCountry: "USA"
              addressStateOrProvince: "NY"
      responses:
        '200':
          description: MSP updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "MSP updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete MSP
      description: Deletes an existing MSP
      operationId: deleteMSP
      tags:
        - MSP Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP to delete
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: MSP deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "MSP deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /msp/user/{mspid}:
    post:
      summary: Create MSP User
      description: Creates a new user for a specific MSP
      operationId: createMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerUserReq'
            example:
              firstName: "John"
              lastName: "Doe"
              email: "john.doe@example.com"
              phone: "+1234567890"
              role: "admin"
      responses:
        '200':
          description: MSP user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerUserReq'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                firstName: "John"
                lastName: "Doe"
                email: "john.doe@example.com"
                phone: "+1234567890"
                role: "admin"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      summary: Get All MSP Users
      description: Retrieves a list of all users for a specific MSP
      operationId: getMSPAllUsers
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: List of MSP users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreatePartnerUserReq'
              example:
                - id: "550e8400-e29b-41d4-a716-446655440000"
                  firstName: "John"
                  lastName: "Doe"
                  email: "john.doe@example.com"
                  phone: "+1234567890"
                  role: "admin"
                - id: "550e8400-e29b-41d4-a716-446655440001"
                  firstName: "Jane"
                  lastName: "Smith"
                  email: "jane.smith@example.com"
                  phone: "+1234567891"
                  role: "user"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /msp/user/{mspid}/{id}:
    get:
      summary: Get MSP User
      description: Retrieves details of a specific user within an MSP
      operationId: getMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: id
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: MSP user details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerUserReq'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                firstName: "John"
                lastName: "Doe"
                email: "john.doe@example.com"
                phone: "+1234567890"
                role: "admin"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update MSP User
      description: Updates an existing user's information within an MSP
      operationId: updateMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: id
          in: path
          required: true
          description: Unique identifier of the user to update
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerUserReq'
            example:
              firstName: "John"
              lastName: "Doe"
              email: "john.doe.updated@example.com"
              phone: "+1234567890"
              role: "admin"
      responses:
        '200':
          description: MSP user updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "User updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete MSP User
      description: Deletes an existing user from an MSP
      operationId: deleteMSPUser
      tags:
        - MSP User Management
      parameters:
        - name: mspid
          in: path
          required: true
          description: Unique identifier of the MSP
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
        - name: id
          in: path
          required: true
          description: Unique identifier of the user to delete
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: MSP user deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                message: "User deleted successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    SessionAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: Session-based authentication token

  schemas:
    CreatePartnerInfoReq:
      type: object
      required:
        - email
        - name
        - phone
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
          description: Contact email for the MSP
          example: "contact@example.com"
        name:
          type: string
          description: Name of the MSP organization
          example: "Example MSP"
        phone:
          type: string
          description: Contact phone number
          example: "+1234567890"
        firstName:
          type: string
          description: First name of the contact person
          example: "John"
        lastName:
          type: string
          description: Last name of the contact person
          example: "Doe"
        addressCity:
          type: string
          description: City address
          example: "New York"
        addressPostcode:
          type: string
          description: Postal code
          example: "10001"
        addressCountry:
          type: string
          description: Country
          example: "USA"
        addressStateOrProvince:
          type: string
          description: State or province
          example: "NY"

    CreatePartnerInfoRsp:
      type: object
      required:
        - partnerName
        - partnerID
      properties:
        partnerName:
          type: string
          description: Generated partner name (original name with "msp_" prefix)
          example: "example_msp"
        partnerID:
          type: string
          format: uuid
          description: Unique identifier for the created MSP
          example: "550e8400-e29b-41d4-a716-446655440000"

    UpdatePartnerInfoReq:
      type: object
      required:
        - name
        - phone
      properties:
        name:
          type: string
          description: Updated name of the MSP
          example: "Updated MSP Name"
        phone:
          type: string
          description: Updated phone number
          example: "+1234567890"
        addressCity:
          type: string
          description: Updated city
          example: "Updated City"
        addressPostcode:
          type: string
          description: Updated postal code
          example: "10002"
        addressCountry:
          type: string
          description: Updated country
          example: "USA"
        addressStateOrProvince:
          type: string
          description: Updated state or province
          example: "NY"

    CreatePartnerUserReq:
      type: object
      required:
        - firstName
        - lastName
        - email
        - phone
        - role
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user (generated on creation)
          example: "550e8400-e29b-41d4-a716-446655440000"
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"
        email:
          type: string
          format: email
          description: User's email address
          example: "john.doe@example.com"
        phone:
          type: string
          description: User's phone number
          example: "+1234567890"
        role:
          type: string
          description: User's role
          enum: ["admin", "user", "idp"]
          example: "admin"

    SuccessMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Success message
          example: "Operation completed successfully"

    ErrorResponse:
      type: object
      required:
        - errorCode
        - message
      properties:
        errorCode:
          type: string
          description: Error code
          example: "SESSION_ID_NOT_FOUND"
        message:
          type: string
          description: Error message
          example: "Session ID not found in request"

  responses:
    BadRequest:
      description: Bad Request - Invalid JSON or missing required fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "BAD_JSON_REQUEST"
            message: "Invalid JSON format or missing required fields"

    Unauthorized:
      description: Unauthorized - Invalid or expired session
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "SESSION_ID_NOT_FOUND"
            message: "Session ID not found in request"

    NotFound:
      description: Not Found - Resource not found or access denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "RESOURCE_NOT_FOUND"
            message: "Resource not found or access denied"

tags:
  - name: MSP Management
    description: Operations for managing Member Service Providers
  - name: MSP User Management
    description: Operations for managing users within MSPs
